git checkout -b <branch_name> // create new branch
git add .  // adding the changes to the branch 
git commit -m "testing" // add comment for the changes
git push origin  <branch_name>   // push the changes to remote repo
git clone git@github.com:GAJANROVER/test.git  // clonning the remote repo
git status   // to check the status of the branch 
git pull origin <branch_name>   updating the local repo
git checkout -b <branch_name>  // creating new branch

git push origin <your_branch_name> -f
git push origin <your_branch_name> --force
git merge --abort  // abort the merge

git reset --hard <sha1-commit-id>  // back to old commit
git push origin HEAD --force

//Remove untracked files
git clean -f
git clean -f -d   /To remove directories

To remove directories, run git clean -f -d or git clean -fd
To remove ignored files, run git clean -f -X or git clean -fX
To remove ignored and non-ignored files, run git clean -f -x or git clean -fx

// delete branch locally
git branch -d localBranchName

//delete local branch that is unmerged
git branch -D localBranchName

// delete branch remotely
git push origin --delete remoteBranchName

// to change previous branch
git checkout - 

// configure git shortcut
git config --global alias.ac "commit -am"

// to check git config
git config --global --list
git config --list


lists the most recently worked on branches from top to bottom.
             -------- git for-each-ref --sort=-committerdate refs/heads/

If you want to see the date of last commit, you can do this:
             --------git for-each-ref --sort='-committerdate' --format='%(refname)%09%(committerdate)' refs/heads | sed -e 's-refs/heads/--'

git last commit date with id
------------------------------------------
git rev-list --format=format:'%ai' --max-count=1 `git rev-parse HEAD`


git last update date
--------------------------------------------------------------
git show -1 --stat

//stash with untracked files
git stash -u

// check stash list
git stash --list
